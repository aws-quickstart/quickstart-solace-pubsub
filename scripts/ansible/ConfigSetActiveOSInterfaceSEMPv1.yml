---
#configure
#router-name <name>
- hosts: LOCALHOST

  tasks:
    - name: Shut management vrf interface
      uri:
         url:              "http://{{ ANSIBLE_VMR_IP }}:{{ ANSIBLE_VMR_SEMP_PORT }}/SEMP"
         method:           GET
         user:             "{{ ANSIBLE_USERNAME }}"
         password:         "{{ lookup('env','admin_password') }}"
         body:             "<rpc semp-version='soltr/8_2VMR'>\
                           <ip><vrf><name>management</name><interface><ip-interface>intf0:1</ip-interface><shutdown/></interface></vrf></ip></rpc>"
         force_basic_auth: yes
         status_code:      200
         body_format:      raw
         return_content:   yes
      register: rpc_reply
      ignore_errors: True
      until: rpc_reply.content.find("code=\"ok\"") != -1
      retries: 60
      delay: 10

    - name: Change active interface
      uri:
         url:              "http://{{ ANSIBLE_VMR_IP }}:{{ ANSIBLE_VMR_SEMP_PORT }}/SEMP"
         method:           GET
         user:             "{{ ANSIBLE_USERNAME }}"
         password:         "{{ lookup('env','admin_password') }}"
         body:             "<rpc semp-version='soltr/8_2VMR'>\
                           <interface><phy-interface>intf0</phy-interface><os-physical-interface>\
                           <os-physical-interface-name>eth1</os-physical-interface-name>\
                           </os-physical-interface></interface></rpc>"
         force_basic_auth: yes
         status_code:      200
         body_format:      raw
         return_content:   yes
      register: rpc_reply
      ignore_errors: True
      until: rpc_reply.content.find("code=\"ok\"") != -1
      retries: 60
      delay: 10

    - name:  No shut management vrf interface
      uri:
         url:              "http://{{ ANSIBLE_VMR_IP }}:{{ ANSIBLE_VMR_SEMP_PORT }}/SEMP"
         method:           GET
         user:             "{{ ANSIBLE_USERNAME }}"
         password:         "{{ lookup('env','admin_password') }}"
         body:             "<rpc semp-version='soltr/8_2VMR'>\
                           <ip><vrf><name>management</name><interface><ip-interface>intf0:1</ip-interface><no><shutdown/></no></interface></vrf></ip></rpc>"
         force_basic_auth: yes
         status_code:      200
         body_format:      raw
         return_content:   yes
      register: rpc_reply
      ignore_errors: True
      until: rpc_reply.content.find("code=\"ok\"") != -1
      retries: 60
      delay: 10