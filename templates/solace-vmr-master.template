{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a new VPC infrastructure for Solace high availability architecture. **WARNING** This template creates Amazon EC2 instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Solace Parameters"
                    },
                    "Parameters": [
                        "SolaceDockerURL",
                        "AdminPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "NumberOfAZs",
                        "VPCCIDR",
                        "CreatePrivateSubnets",
                        "PublicSubnet1CIDR",
                        "PrivateSubnet1ACIDR",
                        "PrivateSubnet1BCIDR",
                        "PublicSubnet2CIDR",
                        "PrivateSubnet2ACIDR",
                        "PrivateSubnet2BCIDR",
                        "PublicSubnet3CIDR",
                        "PrivateSubnet3ACIDR",
                        "PrivateSubnet3BCIDR",
                        "SSHAccessCIDR",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Common Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "BootDiskSize"
                    ]
                },
                {
                    "Label": {
                        "default": "MessageRouterInstance Configuration"
                    },
                    "Parameters": [
                        "MessageRouterNodeInstanceType",
                        "MessageRouterNodeStorage"
                    ]
                },
                {
                    "Label": {
                        "default": "MonitorInstance Configuration"
                    },
                    "Parameters": [
                        "MonitorNodeInstanceType",
                        "MonitorNodeStorage"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "SolaceDockerURL": {
                    "default": "Solace Docker URL"
                },
                "AdminPassword": {
                    "default": "Password to access SolOS admin console and SEMP"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "NumberOfAZs": {
                    "default": "Number of Availability Zones"
                },
                "BootDiskSize": {
                    "default": "Boot Disk Capacity (GiB)"
                },
                "MessageRouterNodeInstanceType": {
                    "default": "Instance Type"
                },
                "MessageRouterNodeStorage": {
                    "default": "Persistent Storage"
                },
                "MonitorNodeInstanceType": {
                    "default": "Instance Type"
                },
                "MonitorNodeNodeSpotPrice": {
                    "default": "Spot Price (optional)"
                },
                "MonitorNodeNodeStorage": {
                    "default": "Persistent Storage"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "CreatePrivateSubnets": {
                    "default": "Create production ready enviroment"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PrivateSubnet1ACIDR": {
                    "default": "Private Subnet 1A CIDR"
                },
                "PrivateSubnet1BCIDR": {
                    "default": "Private Subnet 1B CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "PrivateSubnet2ACIDR": {
                    "default": "Private Subnet 2A CIDR"
                },
                "PrivateSubnet2BCIDR": {
                    "default": "Private Subnet 2B CIDR"
                },
                "PublicSubnet3CIDR": {
                    "default": "Public Subnet 3 CIDR"
                },
                "PrivateSubnet3ACIDR": {
                    "default": "Private Subnet 3A CIDR"
                },
                "PrivateSubnet3BCIDR": {
                    "default": "Private Subnet 3B CIDR"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed External Access CIDR"
                },
                "SSHAccessCIDR": {
                    "default": "Allowed External Mgmt Access CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                }
            }
        }
    },
    "Parameters": {
        "SolaceDockerURL": {
            "Description": "URL to Solace Docker Image obtained via registration here: http://dev.solace.com/downloads/download_vmr-ce-docker",
            "Type": "String"
        },
        "AdminPassword": {
            "Description": "Require password to access SolOS admin console and SEMP",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved exctly 3 AZs are used for this deployment.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "NumberOfAZs": {
            "ConstraintDescription": "3 means each node in own az, 2 puts monitor and backup in one az",
            "Default": "3",
            "Description": "Number of availability zones to use",
            "AllowedValues": [
                "2",
                "3"
            ],
            "Type": "Number"
            },
        "BootDiskSize": {
            "ConstraintDescription": "Deployment supports 8 to 128 GB for boot volumes",
            "Default": "24",
            "Description": "Allocated EBS storage for boot disk",
            "MaxValue": "128",
            "MinValue": "8",
            "Type": "Number"
        },
        "MessageRouterNodeInstanceType": {
            "AllowedValues": [
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "m3.large",
                "m3.xlarge",
                "m4.large",
                "m4.xlarge",
                "c4.xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "t2.large",
            "Description": "Instance Type for Solace Message Router",
            "Type": "String"
        },
        "MessageRouterNodeStorage": {
            "ConstraintDescription": "No more than 640 GiB per device.",
            "Default": "0",
            "Description": "Allocated EBS storage for each block device (in GiB); 0 indicates ephemeral storage only",
            "AllowedValues": [
                "0",
                "20",
                "40",
                "80",
                "160",
                "320",
                "640"
            ],
            "Type": "Number"
        },
        "KeyPairName": {
            "Description": "Name of an existing EC2 key pair within the AWS region; all instances will launch with this key pair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "CreatePrivateSubnets": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Whether to create and use Private Subnets with fronting ELBs",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/26",
            "Description": "CIDR Block for the bootstrap subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PrivateSubnet1ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.64/26",
            "Description": "CIDR Block for the bootstrap subnet 1A located in Availability Zone 1",
            "Type": "String"
        },
        "PrivateSubnet1BCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.128/25",
            "Description": "CIDR Block for the bootstrap subnet 1B located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.129.0/26",
            "Description": "CIDR Block for the bootstrap subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "PrivateSubnet2ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.129.64/26",
            "Description": "CIDR Block for the bootstrap subnet 2A located in Availability Zone 2",
            "Type": "String"
        },
        "PrivateSubnet2BCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.129.128/25",
            "Description": "CIDR Block for the bootstrap subnet 2B located in Availability Zone 2",
            "Type": "String"
        },
        "PublicSubnet3CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.130.0/26",
            "Description": "CIDR Block for the bootstrap subnet 3 located in Availability Zone 3",
            "Type": "String"
        },
        "PrivateSubnet3ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.130.64/26",
            "Description": "CIDR Block for the bootstrap subnet 3A located in Availability Zone 3",
            "Type": "String"
        },
        "PrivateSubnet3BCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.130.128/25",
            "Description": "CIDR Block for the bootstrap subnet 3B located in Availability Zone 3",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external access to cluster nodes",
            "Type": "String"
        },
        "SSHAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external access to cluster nodes for mgmt",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/22",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        },
        "MonitorNodeInstanceType": {
            "AllowedValues": [
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "m3.large",
                "m3.xlarge",
                "m4.large",
                "m4.xlarge",
                "c4.xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "t2.large",
            "Description": "Instance Type for Solace Message Router",
            "Type": "String"
        },
        "MonitorNodeStorage": {
            "ConstraintDescription": "No more than 1024 GiB per device (4 TiB per node).",
            "Default": "0",
            "Description": "Allocated EBS storage for each block device (in GiB; 4 devs per node); 0 indicates ephemeral storage only",
            "MaxValue": "1024",
            "MinValue": "0",
            "Type": "Number"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "solace/vmr/latest",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        }
    },
    "Mappings": {},
    "Conditions": {
        "Use3AZs": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfAZs"
                },
                "3"
            ]
        },
        "UsePrivateSubnets": {
            "Fn::Equals": [
                {
                    "Ref": "CreatePrivateSubnets"
                },
                "true"
            ]
        },
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}/submodules/quickstart-aws-vpc/templates/aws-vpc.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "CreatePrivateSubnets": {
                        "Ref": "CreatePrivateSubnets"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1ACIDR"
                    },
                    "PrivateSubnet1BCIDR": {
                        "Ref": "PrivateSubnet1BCIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2ACIDR"
                    },
                    "PrivateSubnet2BCIDR": {
                        "Ref": "PrivateSubnet2BCIDR"
                    },
                    "PublicSubnet3CIDR": {
                        "Ref": "PublicSubnet3CIDR"
                    },
                    "PrivateSubnet3ACIDR": {
                        "Ref": "PrivateSubnet3ACIDR"
                    },
                    "PrivateSubnet3BCIDR": {
                        "Ref": "PrivateSubnet3BCIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },

        "BastionStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Condition": "UsePrivateSubnets",
            "DependsOn": [
                "VPCStack"
            ],
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}/submodules/quickstart-linux-bastion/templates/linux-bastion.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "BastionInstanceType": "t2.micro",
                    "BastionAMIOS": "Amazon-Linux-HVM",
                    "EnableBanner": "true",
                    "BastionBanner": {
                        "Fn::Sub": [
                            "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}/scripts/solace-banner.txt",
                            {
                                "QSS3Region": {
                                    "Fn::If": [
                                        "GovCloudCondition",
                                        "s3-us-gov-west-1",
                                        "s3"
                                    ]
                                }
                            }
                        ]
                    },
                    "NumBastionHosts": "2",
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "SSHAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "SolaceStack": {
            "DependsOn": [ "BastionStack" ],
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}/templates/solace-vmr.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "SolaceDockerURL": {
                        "Ref": "SolaceDockerURL"
                    },
                    "AdminPassword": {
                        "Ref": "AdminPassword"
                    },
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "BootDiskSize": {
                        "Ref": "BootDiskSize"
                    },
                    "MessageRouterNodeInstanceType": {
                        "Ref": "MessageRouterNodeInstanceType"
                    },
                    "MessageRouterNodeStorage": {
                        "Ref": "MessageRouterNodeStorage"
                    },
                    "MonitorNodeInstanceType": {
                        "Ref": "MonitorNodeInstanceType"
                    },
                    "MonitorNodeStorage": {
                        "Ref": "MonitorNodeStorage"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "UsePrivateSubnets": {
                        "Ref": "CreatePrivateSubnets"  
                    },
                    "SSHSecurityGroupID": {
                        "Fn::GetAtt": [
                            "BastionStack",
                            "Outputs.BastionSecurityGroupID"
                        ]
                    },                                        
                    "VPCCIDR": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCCIDR"
                        ]
                    },
                    "PrivateSubnetIDs" : {
                        "Fn::If": [
                            "UsePrivateSubnets",
                            {
                                "Fn::If": [
                                    "Use3AZs",
                                    {
                                        "Fn::Join": [
                                            ",",
                                            [
                                                {
                                                    "Fn::GetAtt": [
                                                        "VPCStack",
                                                        "Outputs.PrivateSubnet1AID"
                                                    ]
                                                },
                                                {
                                                    "Fn::GetAtt": [
                                                        "VPCStack",
                                                        "Outputs.PrivateSubnet2AID"
                                                    ]
                                                },
                                                {
                                                    "Fn::GetAtt": [
                                                        "VPCStack",
                                                        "Outputs.PrivateSubnet3AID"
                                                    ]
                                                }
                                            ]
                                        ]
                                    },
                                    {
                                        "Fn::Join": [
                                            ",",
                                            [
                                                {
                                                    "Fn::GetAtt": [
                                                        "VPCStack",
                                                        "Outputs.PrivateSubnet1AID"
                                                    ]
                                                },
                                                {
                                                    "Fn::GetAtt": [
                                                        "VPCStack",
                                                        "Outputs.PrivateSubnet2AID"
                                                    ]
                                                }
                                            ]
                                        ]
                                    }
                                ]
                            },
                            {}
                        ]
                    },
                    "PublicSubnetIDs" : {
                        "Fn::If": [
                            "Use3AZs",
                            {
                                "Fn::Join": [
                                    ",",
                                    [
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet1ID"
                                            ]
                                        },
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet2ID"
                                            ]
                                        },
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet3ID"
                                            ]
                                        }
                                    ]
                                ]
                            },
                            {
                                "Fn::Join": [
                                    ",",
                                    [
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet1ID"
                                            ]
                                        },
                                        {
                                            "Fn::GetAtt": [
                                                "VPCStack",
                                                "Outputs.PublicSubnet2ID"
                                            ]
                                        }
                                    ]
                                ]
                            }
                        ]
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        }
    }
}
