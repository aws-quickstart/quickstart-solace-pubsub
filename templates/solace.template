{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudFormation template to deploy Solace PubSub+ HA Message Brokers on AWS. (qs-1nju7g5r0)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": { "default": "Solace Configuration" },
                    "Parameters": [
                        "SolaceDockerImage",
                        "AdminPassword",
                        "ContainerLoggingFormat"
                    ]
                },
                {
                    "Label": { "default": "Network Configuration" },
                    "Parameters": [
                        "VPCID",
                        "NumberOfAZs",
                        "UsePrivateSubnets",
                        "PublicSubnetIDs",
                        "PrivateSubnetIDs",
                        "SSHSecurityGroupID",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": { "default": "Common Amazon EC2 Configuration" },
                    "Parameters": [
                        "KeyPairName",
                        "BootDiskSize"
                    ]
                },
                {
                    "Label": { "default": "Message Broker Instance Configuration" },
                    "Parameters": [
                        "MessageBrokerNodeInstanceType",
                        "MessageBrokerNodeStorage"
                    ]
                },
                {
                    "Label": { "default": "Monitor Instance Configuration" },
                    "Parameters": [ "MonitorNodeInstanceType" ]
                },
                {
                    "Label": { "default": "AWS Quick Start Configuration" },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "SolaceDockerImage": {
                    "default": "Solace Docker image reference"
                },
                "AdminPassword": {
                    "default": "Password to access Solace admin console and SEMP"
                },
                "ContainerLoggingFormat": {
                    "default": "Container logging format"
                },
                "BootDiskSize": {
                    "default": "Boot Disk Capacity (GiB)"
                },
                "MessageBrokerNodeInstanceType": {
                    "default": "Instance Type"
                },
                "MessageBrokerNodeStorage": {
                    "default": "Persistent Storage"
                },
                "MonitorNodeInstanceType": {
                    "default": "Instance Type"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "NumberOfAZs": {
                    "default": "Number of Availability Zones to use"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed External Access CIDR"
                },
                "SSHSecurityGroupID": {
                    "default": "Security group allowed to access console SSH"
                },
                "UsePrivateSubnets": {
                    "default": "Use private subnets"
                },
                "VPCID": {
                    "default": "VPC ID"
                },
                "PrivateSubnetIDs": {
                    "default": "Private Subnet IDs"
                },
                "PublicSubnetIDs": {
                    "default": "Public Subnet IDs"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                }
            }
        }
    },
    "Parameters": {
        "SolaceDockerImage": {
            "Description": "Solace PubSub+ message broker docker image reference: a docker registry name with optional tag or a download URL. The download URL can be obtained from http://dev.solace.com/downloads/ or it can be a url to a remotely hosted load version",
            "Default": "solace/solace-pubsub-standard:latest",
            "Type": "String"
        },
        "AdminPassword": {
            "Description": "Required password to access Solace admin console and SEMP",
            "Type": "String",
            "NoEcho": "True"
        },
        "ContainerLoggingFormat": {
            "AllowedValues": [
                "graylog",
                "legacy",
                "raw",
                "rfc5424"
            ],
            "ConstraintDescription": "Must be a valid container logging format.",
            "Default": "graylog",
            "Description": "Solace message broker logging format in CloudWatch",
            "Type": "String"
        },
        "BootDiskSize": {
            "ConstraintDescription": "Deployment supports 8 to 128 GB for boot volumes",
            "Default": "24",
            "Description": "Allocated EBS storage for boot disk",
            "MaxValue": "128",
            "MinValue": "8",
            "Type": "Number"
        },
        "MessageBrokerNodeInstanceType": {
            "AllowedValues": [
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m3.large",
                "m3.xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "m4.large",
            "Description": "Instance Type for Solace message broker message routing nodes. Note: Make sure that your region supports the selected instance type before continuing",
            "Type": "String"
        },
        "MessageBrokerNodeStorage": {
            "ConstraintDescription": "No more than 640 GiB per device.",
            "Default": "0",
            "Description": "Allocated EBS storage for each block device (in GiB); 0 indicates ephemeral storage only. Non-zero will cause a new io1 disk creation for message-spool which will NOT be deleted on stack termination",
            "AllowedValues": [
                "0",
                "20",
                "40",
                "80",
                "160",
                "320",
                "640"
            ],
            "Type": "Number"
        },
        "MonitorNodeInstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "m4.large",
                "m5.large"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "t2.micro",
            "Description": "Instance Type for Solace message broker monitoring node. Note: Make sure that your region supports the selected instance type before continuing",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Name of an existing EC2 key pair within the AWS region; all instances will launch with this key pair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NumberOfAZs": {
            "ConstraintDescription": "3 means each node in own az, 2 puts monitor and backup in one az",
            "Default": "3",
            "Description": "Number of availability zones to use",
            "AllowedValues": [
                "2",
                "3"
            ],
            "Type": "Number"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external access to cluster nodes",
            "Type": "String"
        },
        "SSHSecurityGroupID": {
            "Description": "ID of the SSH Security Group (e.g., sg-7f16e910).  Note: This will be ignored if 'Use private subnets' is set to 'false'",
            "Type": "String"
        },
        "UsePrivateSubnets": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Whether to use Private Subnets with fronting Bastion Servers",
            "Type": "String"
        },
        "PrivateSubnetIDs": {
            "Description": "Comma separated list of VPC private subnet IDs for the cluster deployment (e.g. subnet-4b8d329f,subnet-bd73afc8); VPC must exist with proper configuration for Solace cluster access. Note: This will be ignored if 'Use private subnets' is set to 'false'",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
         "PublicSubnetIDs": {
            "Description": "Comma separated list of VPC public subnet IDs for the cluster deployment (e.g. subnet-4b8d329f,subnet-bd73afc8); VPC must exist with proper configuration for Solace cluster access",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "VPCID": {
            "Description": "ID of the VPC (e.g. vpc-0343606e)",
            "Type": "AWS::EC2::VPC::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-solace-pubsub/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        }
    },
    "Mappings": {
        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-south-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ca-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        }
    },
    "Conditions": {
        "EnableWaitConditions": {
            "Fn::Equals": [
                "1",
                "1"
            ]
        },
        "Use3AZs": {
            "Fn::Equals": [
                {"Ref": "NumberOfAZs"},
                "3"
            ]
        },
        "UsePrivateSubnetsCondition": {
            "Fn::Equals": [
                { "Ref": "UsePrivateSubnets" },
                "true"
            ]
        },
        "GovCloudCondition": {
            "Fn::Equals": [
                { "Ref": "AWS::Region" },
                "us-gov-west-1"
            ]
        }
    },
    "Resources": {
        "SolaceVMRRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [ "s3:GetObject" ],
                                    "Resource": {
                                        "Fn::Sub": [
                                            "arn:${Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*",
                                            {
                                                "Partition": {
                                                    "Fn::If": [
                                                        "GovCloudCondition",
                                                        "aws-us-gov",
                                                        "aws"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "s3-policy"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "cloudformation:DescribeStackResources",
                                        "ec2:DescribeInstances",
                                        "ec2:CreateTags"
                                    ],
                                    "Resource": [
                                        "*"
                                    ],
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "ec2-policy"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "logs:DescribeLogStreams"
                                    ],
                                    "Resource": [
                                        "arn:aws:logs:*:*:*"
                                    ],
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "cloudwatch-policy"
                    }
                ],
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [ "sts:AssumeRole" ],
                            "Principal": { "Service": [ "ec2.amazonaws.com" ] },
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ { "Ref": "SolaceVMRRole" } ]
            }
        },
        "MessageBrokerPrimaryStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/nodecreate.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "SolaceDockerImage": {
                        "Ref": "SolaceDockerImage"
                    },
                    "AdminPassword": {
                        "Ref": "AdminPassword"
                    },
                    "ContainerLoggingFormat": {
                        "Ref": "ContainerLoggingFormat"
                    },
                    "BootDiskSize": {
                        "Ref": "BootDiskSize"
                    },
                    "ClusterInfoHandle": {
                        "Ref": "ClusterInfoHandle"
                    },
                    "InstanceProfile": {
                        "Ref": "InstanceProfile"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NodeDesignation": "message-router-primary",
                    "NodeInstanceType": {
                        "Ref": "MessageBrokerNodeInstanceType"
                    },
                    "NodeSecurityGroup": {
                        "Fn::Join": [
                            ",",
                            [
                                { "Ref" : "MessageBrokerSecurityGroup" },
                                { "Ref" : "SolaceInternalSecurityGroup" },
                                { "Ref" : "SolaceInternalSecurityGroupMember" },
                                { "Ref" : "RemoteMgmtSecurityGroup" }
                            ]
                        ]    
                    },
                    "ParentStackName": {
                        "Ref": "AWS::StackName"
                    },
                    "PersistentStorage": {
                        "Ref": "MessageBrokerNodeStorage"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "SubnetID": {
                        "Fn::Select": [
                            0,
                            { 
                                "Fn::If": [
                                    "UsePrivateSubnetsCondition",
                                    { "Ref": "PrivateSubnetIDs" }, 
                                    { "Ref": "PublicSubnetIDs" }
                                    ] 
                            }
                        ]
                    }
                }
            }
        },
        "MessageBrokerBackupStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/nodecreate.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "SolaceDockerImage": {
                        "Ref": "SolaceDockerImage"
                    },
                    "AdminPassword": {
                        "Ref": "AdminPassword"
                    },
                    "ContainerLoggingFormat": {
                        "Ref": "ContainerLoggingFormat"
                    },
                    "BootDiskSize": {
                        "Ref": "BootDiskSize"
                    },
                    "ClusterInfoHandle": {
                        "Ref": "ClusterInfoHandle"
                    },
                    "InstanceProfile": {
                        "Ref": "InstanceProfile"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NodeDesignation": "message-router-backup",
                    "NodeInstanceType": {
                        "Ref": "MessageBrokerNodeInstanceType"
                    },
                    "NodeSecurityGroup": {
                        "Fn::Join": [
                            ",",
                            [
                                { "Ref" : "MessageBrokerSecurityGroup" },
                                { "Ref" : "SolaceInternalSecurityGroup" },
                                { "Ref" : "SolaceInternalSecurityGroupMember" },
                                { "Ref" : "RemoteMgmtSecurityGroup" }
                            ]
                        ]    
                    },
                    "ParentStackName": {
                        "Ref": "AWS::StackName"
                    },
                    "PersistentStorage": {
                        "Ref": "MessageBrokerNodeStorage"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "SubnetID": {
                        "Fn::Select": [
                            1,
                            { 
                                "Fn::If": [
                                    "UsePrivateSubnetsCondition",
                                    { "Ref": "PrivateSubnetIDs" }, 
                                    { "Ref": "PublicSubnetIDs" }
                                    ] 
                            }
                        ]
                    }
                }
            }
        },
        "MonitorStack" :{
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/nodecreate.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "SolaceDockerImage": {
                        "Ref": "SolaceDockerImage"
                    },
                    "AdminPassword": {
                        "Ref": "AdminPassword"
                    },
                    "ContainerLoggingFormat": {
                        "Ref": "ContainerLoggingFormat"
                    },
                    "BootDiskSize": {
                        "Ref": "BootDiskSize"
                    },
                    "ClusterInfoHandle": {
                        "Ref": "ClusterInfoHandle"
                    },
                    "InstanceProfile": {
                        "Ref": "InstanceProfile"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NodeDesignation": "monitor",
                    "NodeInstanceType": {
                        "Ref": "MonitorNodeInstanceType"
                    },
                    "NodeSecurityGroup": {
                        "Fn::Join": [
                            ",",
                            [
                                { "Ref" : "SolaceInternalSecurityGroup" },
                                { "Ref" : "SolaceInternalSecurityGroupMember" },
                                { "Ref" : "RemoteMgmtSecurityGroup" }
                            ]
                        ]    
                    },
                    "ParentStackName": {
                        "Ref": "AWS::StackName"
                    },
                    "PersistentStorage": "0",
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "SubnetID": {
                        "Fn::Select": [
                            { "Fn::If": ["Use3AZs", 2, 1] },
                            { 
                                "Fn::If": [
                                    "UsePrivateSubnetsCondition",
                                    { "Ref": "PrivateSubnetIDs" }, 
                                    { "Ref": "PublicSubnetIDs" }
                                    ] 
                            }
                        ]
                    }
                }
            }
        },
         "SolaceInternalSecurityGroupMember": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCID"
                },
                "GroupDescription": "All Solace Nodes"
            }
        },       
        "SolaceInternalSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn": [ "SolaceInternalSecurityGroupMember" ],
            "Properties": {
                "VpcId": {
                    "Ref": "VPCID"
                },
                "GroupDescription": "All Solace Nodes",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8741",
                        "ToPort": "8741", 
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8300",
                        "ToPort": "8302", 
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "8300",
                        "ToPort": "8302", 
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "55555",
                        "ToPort": "55555",
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "55003",
                        "ToPort": "55003",
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8000",
                        "ToPort": "8000",
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5672",
                        "ToPort": "5672",
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9000",
                        "ToPort": "9000",
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1883",
                        "ToPort": "1883",
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5550",
                        "ToPort": "5550",
                        "SourceSecurityGroupId": { "Ref": "SolaceInternalSecurityGroupMember" } 
                    }
                ]
            }
        },
        "RemoteMgmtSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCID"
                },
                "GroupDescription": "All devices external to AWS",
                "SecurityGroupIngress": [
                    {
                        "Fn::If": [
                            "UsePrivateSubnetsCondition",
                            {
                                "IpProtocol": "tcp",
                                "FromPort": "22",
                                "ToPort": "22", 
                                "SourceSecurityGroupId": { "Ref": "SSHSecurityGroupID" } 
                            },
                            {
                                "IpProtocol": "tcp",
                                "FromPort": "22",
                                "ToPort": "22",                             
                                "CidrIp": { "Ref": "RemoteAccessCIDR" } 
                            }
                        ]
                    }
                ]
            }
        },
        "MessageBrokerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCID"
                },
                "GroupDescription": "Message Broker Security Group",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "55555",
                        "ToPort": "55555",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "55003",
                        "ToPort": "55003",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8000",
                        "ToPort": "8000",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5672",
                        "ToPort": "5672",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9000",
                        "ToPort": "9000",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1883",
                        "ToPort": "1883",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    }
                ]
            }
        },
        "ClusterInfoHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "ClusterInfoCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "EnableWaitConditions",
            "DependsOn": ["MessageBrokerPrimaryStack", "MessageBrokerBackupStack", "MonitorStack"],
            "Properties": {
                "Handle": {
                    "Ref": "ClusterInfoHandle"
                },
                "Timeout": "300",
                "Count": "1"
            }
        },
        "ELB": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "DependsOn": ["MessageBrokerPrimaryStack"],
            "Condition": "UsePrivateSubnetsCondition",
            "Properties":{
                "SecurityGroups": [
                    { "Ref" : "MessageBrokerSecurityGroup" },
                    { "Ref" : "SolaceInternalSecurityGroupMember" }
                ],
                "Subnets" : { "Ref": "PublicSubnetIDs" },
                "Instances" : [
                    {"Fn::GetAtt": ["MessageBrokerPrimaryStack","Outputs.EC2ID"]},
                    {"Fn::GetAtt": ["MessageBrokerBackupStack","Outputs.EC2ID"]},
                    {"Fn::GetAtt": ["MonitorStack","Outputs.EC2ID"]}
                ],
                "HealthCheck" : {
                    "Target" : {
                        "Fn::Join" : [ "", [ "HTTP:", 5550, "/health-check/guaranteed-active" ] ]
                    },
                    "Timeout" : "3",
                    "Interval" : "5",
                    "UnhealthyThreshold" : "2",
                    "HealthyThreshold" : "2"
                },
                "Listeners" : [
                    {
                    "LoadBalancerPort" : "55555",
                    "InstancePort" : "55555",
                    "Protocol" : "TCP"
                    },{
                    "LoadBalancerPort" : "55003",
                    "InstancePort" : "55003",
                    "Protocol" : "TCP"
                    },{
                    "LoadBalancerPort" : "8000",
                    "InstancePort" : "8000",
                    "Protocol" : "TCP"
                    },{
                    "LoadBalancerPort" : "5672",
                    "InstancePort" : "5672",
                    "Protocol" : "TCP"
                    },{
                    "LoadBalancerPort" : "9000",
                    "InstancePort" : "9000",
                    "Protocol" : "TCP"
                    },{
                    "LoadBalancerPort" : "1883",
                    "InstancePort" : "1883",
                    "Protocol" : "TCP"
                    },{
                    "LoadBalancerPort" : "80",
                    "InstancePort" : "80",
                    "Protocol" : "HTTP"
                    },{
                    "LoadBalancerPort" : "8080",
                    "InstancePort" : "8080",
                    "Protocol" : "HTTP"
                    }
                ]
            }
        }
    }
}
